
- Dot primitive as in Clojure (current implementation is a hack)
- env.SetValue on Variable
- Nested let
- set! acting on Variable
- list as PersistentList
- vectors as PersistentVector
- [1 2 3] is macro (vector 1 2 3) ???
- implements PersistentMap
- Variable implementation with multithreading support, thread local storage for values
- Namespaces management in ValueEnvironment
- Should implement "Locals created with let are not variables. Once created their values never change!"
- "(var symbol)
The symbol must resolve to a var, and the Var object itself (not its value) is returned. The reader macro #'x expands to (var x)."
- "(new Classname args*)
can be written
(Classname. args*) ;note trailing dot"
- Improve NewPrimitive, Utilities to locate type name